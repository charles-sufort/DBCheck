MODULE mem_process1(l_num,a_cell,b_cell,s_w,s_r)
 VAR
 	state : array 1..2 of {"WW","WR","W","R","NOP"};
	op_c : word[2];
	finished: boolean;
	locks: {"1","1s","2","2s","12","1s2","12s","1s2s","0"};
	DEFINE op_state := state[1] = "W" | state[1] = "R" | state[2] = "W" | state[2] = "R";
	DEFINE nop_state := (state[1] = "NOP" & state[2] = "NOP");
	DEFINE nop_sched := ((s_w[1] & op_c)=0b_00)  & ((s_w[2] & op_c)=0b_00) & ((s_r[1] & op_c)=0b_00) & ((s_r[2] & op_c)=0b_00);
	DEFINE l_exl := l_num = 1 ? "1" : "2";
	DEFINE l_s := l_num = 1 ? "1s" : "2s";
	DEFINE WR_1 := state[1] = "WR" & (a_cell.lock = l_exl | a_cell.lock = "12s" | a_cell.lock = l_s); 
	DEFINE WR_2 := state[2] = "WR" & (b_cell.lock = l_exl | b_cell.lock = "12s" | b_cell.lock = l_s); 
	DEFINE WW_1 := state[1] = "WW" & a_cell.lock = l_exl; 
	DEFINE WW_2 := state[2] = "WW" & b_cell.lock = l_exl; 


 ASSIGN
	init(locks) := ((s_w[1] != 0b_00)&(s_w[2] != 0b_00)) ? "12" : (((s_w[1] != 0b_00)&(s_r[2] != 0b_00)) ? "12s": 
	(((s_w[2] != 0b_00)&(s_r[1] != 0b_00)) ? "1s2" : 
	((s_w[1] != 0b_00) ? "1" : 
	((s_w[2] != 0b_00) ? "2" : 
	(((s_r[1] != 0b_00)&(s_r[2] != 0b_00)) ? "1s2s":
	((s_r[1] != 0b_00) ? "1s" : "2s"
	)))))); 
	init(state[1]) := "NOP";
	init(state[2]) := "NOP";
	init(op_c) := 0b_10;
	init(finished):= FALSE;
	next(locks) := case
		finished: "0";
		TRUE: locks;
	esac;
	next(op_c) := case
		op_c = 0b_00: op_c;
		op_state : op_c >> 1;
		nop_state & nop_sched: op_c >> 1;
		TRUE : op_c;
	esac;
	next(finished):= case
		finished: TRUE;
		op_state & op_c = 0b_01: TRUE;
		(op_c = 0b_01) & nop_sched : TRUE;
		TRUE: FALSE;
	esac;
	next(state[1]) := case
		state[1] = "R" | state[1] = "W" : "NOP";
		state[1] = "WR" & (a_cell.lock = l_exl | a_cell.lock = "12s" | a_cell.lock = l_s): "R";
		state[1] = "WW" & a_cell.lock = l_exl : "W";
		! finished & ((s_r[1] & op_c) = op_c)   : "WR";
		! finished & ((s_w[1] & op_c) = op_c)   : "WW";
		! finished & ((s_r[1] & op_c) = 0b_00)   & ((s_w[1] & op_c) = 0b_00	) : "NOP";
		state[1] = "WR" | state[1] = "WW" : state[1];
		TRUE: "NOP";
	esac;
	next(state[2]) := case
		state[2] = "R" | state[2] = "W" : "NOP";
		state[2] = "WR" & (b_cell.lock = l_exl | b_cell.lock = "12s" | b_cell.lock = l_s): "R";
		state[2] = "WW" & b_cell.lock = l_exl : "W";
		! finished & ((s_r[2] & op_c) = op_c)   : "WR";
		! finished & ((s_w[2] & op_c) = op_c)   : "WW";
		! finished & ((s_r[2] & op_c) = 0b_00)   & ((s_w[2] & op_c) = 0b_00	) : "NOP";
		state[2] = "WR" | state[2] = "WW" : state[2];
		TRUE: "NOP";
	esac;
	
MODULE mem_block1(c_num,proc1,proc2,o)
 VAR
 	num: 1..2;
	lock: {"0","1","2","1s","2s","12s"};
	DEFINE l_val := num = 1 ? "1" : "2";
	DEFINE l_val2 := num = 1 ? "12s" : "1s2";
	DEFINE sl_val := num = 1 ? "1s":"2s";
	DEFINE sl_val2 := num = 1 ? "1s2":"12s";
 ASSIGN
	num := c_num;
	init(lock) := "0";
	next(lock) := case
	lock = "1" & proc1.finished : "0";
	lock = "1s" & proc1.finished : "0";
	lock = "2" & proc2.finished : "0";
	lock = "2s" & proc2.finished : "0";
	lock = "12s" & proc1.finished & proc2.finished : "0";
	lock = "1" : lock;
	lock = "1s" : lock;
	lock = "2" : lock;
	lock = "2s" : lock;
	lock = "12s": lock;
	((proc1.locks = sl_val2) | (proc1.locks = sl_val) | (proc1.locks = "1s2s")) & ((proc2.locks = sl_val2) | (proc2.locks = sl_val) | (proc2.locks = "1s2s")) : "12s";
	(o = 1) & ((proc1.locks = "12") | (proc1.locks = l_val) | (proc1.locks = l_val2)) : "1";
	(o = 1) & ((proc1.locks = sl_val2) | (proc1.locks = sl_val) | (proc1.locks = "1s2s")) : "1s";
	(o = 2) & ((proc2.locks = "12") | (proc2.locks = l_val) | (proc2.locks = l_val2)) : "2";
	(o = 2) & ((proc2.locks = sl_val2) | (proc2.locks = sl_val) | (proc2.locks = "1s2s")) : "2s";
	((proc2.locks = "12") | (proc2.locks = l_val) | (proc2.locks = l_val2)) : "2";
	((proc2.locks = sl_val2) | (proc2.locks = sl_val) | (proc2.locks = "1s2s")) : "2s";
	((proc1.locks = "12") | (proc1.locks = l_val) | (proc1.locks = l_val2)) : "1";
	((proc1.locks = sl_val2) | (proc1.locks = sl_val) | (proc1.locks = "1s2s")) : "1s";
	TRUE : "0";
	esac;


MODULE main
 VAR
	S1_w: array 1..2 of word[2];
	S1_r: array 1..2 of word[2];
	S2_w: array 1..2 of word[2];
	S2_r: array 1..2 of word[2];
	o : 1..2;
 	p1: mem_process1(1,acell,bcell,S1_w,S1_r);
	p2: mem_process1(2,acell,bcell,S2_w,S2_r);
	acell: mem_block1(1,p1,p2,o);
  	bcell: mem_block1(2,p1,p2,o);
